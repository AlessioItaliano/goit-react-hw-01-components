{"ast":null,"code":"var _jsxFileName = \"/Users/alessio/Documents/GitHub/goit-react-hw-01-components/src/components/statistic/Statistics.jsx\";\nimport PropTypes from 'prop-types';\nimport './Statistics.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = _ref => {\n  let {\n    title,\n    stats\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"statistics\",\n    children: [title !== '' && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"stat-list\",\n      children: stats.map(stat => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"item\",\n        style: {\n          backgroundColor: `${getRandomColor()}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: stat.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"percentage\",\n          children: [\" \", stat.percentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, stat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Statistics;\n\nfunction getRandomColor() {\n  let letters = '0123456789ABCDEF';\n  let color = '#';\n\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n\n  return color;\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired\n  }))\n};\nexport default Statistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/Users/alessio/Documents/GitHub/goit-react-hw-01-components/src/components/statistic/Statistics.jsx"],"names":["PropTypes","Statistics","title","stats","map","stat","backgroundColor","getRandomColor","label","percentage","id","letters","color","i","Math","floor","random","propTypes","string","arrayOf","exact","isRequired","number"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,OAAO,kBAAP;;;AAEA,MAAMC,UAAU,GAAG,QAAsB;AAAA,MAArB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAqB;AACvC,sBACE;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA,eACGD,KAAK,KAAK,EAAV,iBAAgB;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,gBAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,YADnB,eAGE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBACGC,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACb;AACE,QAAA,SAAS,EAAC,MADZ;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAG,GAAEC,cAAc,EAAG;AAAvC,SAHT;AAAA,gCAKE;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA,oBAAyBF,IAAI,CAACG;AAA9B;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA,0BAA+BH,IAAI,CAACI,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA,SAEOJ,IAAI,CAACK,EAFZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAnBD;;KAAMT,U;;AAqBN,SAASM,cAAT,GAA0B;AACxB,MAAII,OAAO,GAAG,kBAAd;AACA,MAAIC,KAAK,GAAG,GAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BD,IAAAA,KAAK,IAAID,OAAO,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAhB;AACD;;AACD,SAAOJ,KAAP;AACD;;AAEDX,UAAU,CAACgB,SAAX,GAAuB;AACrBf,EAAAA,KAAK,EAAEF,SAAS,CAACkB,MADI;AAErBf,EAAAA,KAAK,EAAEH,SAAS,CAACmB,OAAV,CACLnB,SAAS,CAACoB,KAAV,CAAgB;AACdV,IAAAA,EAAE,EAAEV,SAAS,CAACkB,MAAV,CAAiBG,UADP;AAEdb,IAAAA,KAAK,EAAER,SAAS,CAACkB,MAAV,CAAiBG,UAFV;AAGdZ,IAAAA,UAAU,EAAET,SAAS,CAACsB,MAAV,CAAiBD;AAHf,GAAhB,CADK;AAFc,CAAvB;AAWA,eAAepB,UAAf","sourcesContent":["import PropTypes from 'prop-types';\n\nimport './Statistics.css'\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className=\"statistics\">\n      {title !== '' && <h2 className=\"title\">{title}</h2>}\n\n      <ul className=\"stat-list\">\n        {stats.map(stat => (\n          <li\n            className=\"item\"\n            key={stat.id}\n            style={{ backgroundColor: `${getRandomColor()}` }}\n          >\n            <span className=\"label\">{stat.label}</span>\n            <span className=\"percentage\"> {stat.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nfunction getRandomColor() {\n  let letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}